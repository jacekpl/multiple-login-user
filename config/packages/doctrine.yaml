doctrine:
    dbal:
        url: '%env(resolve:DATABASE_URL)%'
        types:
            geometry:   CrEOF\Spatial\DBAL\Types\GeometryType
            point:      CrEOF\Spatial\DBAL\Types\Geometry\PointType
            polygon:    CrEOF\Spatial\DBAL\Types\Geometry\PolygonType

        # IMPORTANT: You MUST configure your server version,
        # either here or in the DATABASE_URL env var (see .env file)
        #server_version: '13'
    orm:
        auto_generate_proxy_classes: true
        naming_strategy: doctrine.orm.naming_strategy.underscore_number_aware
        auto_mapping: true
        mappings:
            App:
                is_bundle: false
                dir: '%kernel.project_dir%/src/Entity'
                prefix: 'App\Entity'
                alias: App
        dql:
            numeric_functions:
                st_contains: CrEOF\Spatial\ORM\Query\AST\Functions\MySql\STContains
                st_geomfromtext: CrEOF\Spatial\ORM\Query\AST\Functions\MySql\GeomFromText
                point: CrEOF\Spatial\ORM\Query\AST\Functions\MySql\Point
                mbrwithin: CrEOF\Spatial\ORM\Query\AST\Functions\MySql\MBRWithin
                GISWithin: App\Doctrine\GISWithin
                acos: DoctrineExtensions\Query\Mysql\Acos
                cos: DoctrineExtensions\Query\Mysql\Cos
                radians: DoctrineExtensions\Query\Mysql\Radians
                sin: DoctrineExtensions\Query\Mysql\Sin
                asin: DoctrineExtensions\Query\Mysql\Asin
                power: DoctrineExtensions\Query\Mysql\Power
                pi: DoctrineExtensions\Query\Mysql\Pi
                round: DoctrineExtensions\Query\Mysql\Round
                st_x: CrEOF\Spatial\ORM\Query\AST\Functions\MySql\X
                st_y: CrEOF\Spatial\ORM\Query\AST\Functions\MySql\Y
            string_functions:
                JSON_SEARCH: App\Doctrine\JsonSearch
                JSON_EXTRACT: Scienta\DoctrineJsonFunctions\Query\AST\Functions\Mysql\JsonExtract

when@test:
    doctrine:
        dbal:
            # "TEST_TOKEN" is typically set by ParaTest
            dbname_suffix: '_test%env(default::TEST_TOKEN)%'

when@prod:
    doctrine:
        orm:
            auto_generate_proxy_classes: false
            query_cache_driver:
                type: pool
                pool: doctrine.system_cache_pool
            result_cache_driver:
                type: pool
                pool: doctrine.result_cache_pool

    framework:
        cache:
            pools:
                doctrine.result_cache_pool:
                    adapter: cache.app
                doctrine.system_cache_pool:
                    adapter: cache.system
